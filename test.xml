<?xml version="1.0" encoding="utf-8"?>
<unattend xmlns="urn:schemas-microsoft-com:unattend" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
<settings pass="specialize">
    <component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
        <FirstLogonCommands>
            <!-- Load DefaultUser Hive -->
            <SynchronousCommand wcm:action="add">
                <Order>1</Order>
                <CommandLine>reg.exe load "HKU\DefaultUser" "C:\Users\Default\NTUSER.DAT"</CommandLine>
            </SynchronousCommand>

            <!-- Run PowerShell script to modify registry keys and remove Copilot -->
            <SynchronousCommand wcm:action="add">
                <Order>2</Order>
                <CommandLine>powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "&amp; {
                    # Ensure HKU: drive is loaded
                    if (!(Test-Path 'HKU:')) {
                        Write-Host 'Creating HKU: drive...' -ForegroundColor Yellow
                        New-PSDrive -PSProvider Registry -Name HKU -Root HKEY_USERS
                    }

                    # Function to set registry keys
                    function Set-Registry {
                        param(
                        [string]$Name,
                        [string]$Path,
                        [ValidateSet('String', 'ExpandString', 'Binary', 'DWord', 'QWord','MultiString')]
                        [string]$Type,
                        [object]$Value
                        )
                        if (!(Test-Path $Path)) {
                            Write-Warning '$Path not found, creating...'
                            New-Item -Path $Path -Force | Out-Null
                        }
                        try {
                            Write-Host "Setting registry key: $Name at $Path" -ForegroundColor Cyan
                            New-ItemProperty -Path $Path -Name $Name -PropertyType $Type -Value $Value -Force | Out-Null
                        }
                        catch {
                            Write-Warning "Failed to set $Path\$Name"
                        }
                    }

                    # Disable Windows Copilot and Recall features
                    $RegData = @(
                        @{ Name = 'TurnOffWindowsCopilot'; Type = 'DWord'; Path = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsCopilot';          Value = '1' },
                        @{ Name = 'TurnOffWindowsCopilot'; Type = 'DWord'; Path = 'HKCU:\Software\Policies\Microsoft\Windows\WindowsCopilot';          Value = '1' },
                        @{ Name = 'ShowCopilotButton';     Type = 'DWord'; Path = 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'; Value = '0' },
                        @{ Name = 'DisableAIDataAnalysis'; Type = 'DWord'; Path = 'HKU:\DefaultUser\Software\Policies\Microsoft\Windows\WindowsAI';    Value = '1' },
                        @{ Name = 'DisableAIDataAnalysis'; Type = 'DWord'; Path = 'HKCU:\Software\Policies\Microsoft\Windows\WindowsAI';               Value = '1' },
                        @{ Name = 'DisableAIDataAnalysis'; Type = 'DWord'; Path = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsAI';               Value = '1' },
                        @{ Name = 'TurnOffSavingSnapshots';Type = 'DWord'; Path = 'HKU:\DefaultUser\Software\Policies\Microsoft\Windows\Windows AI';   Value = '1' },
                        @{ Name = 'TurnOffSavingSnapshots';Type = 'DWord'; Path = 'HKCU:\DefaultUser\Software\Policies\Microsoft\Windows\Windows AI';  Value = '1' },
                        @{ Name = 'TurnOffSavingSnapshots';Type = 'DWord'; Path = 'HKLM:\DefaultUser\Software\Policies\Microsoft\Windows\Windows AI';  Value = '1' }
                    )

                    # Apply registry settings
                    foreach ($entry in $RegData) {
                        Set-Registry -Name $entry.Name -Path $entry.Path -Type $entry.Type -Value $entry.Value
                    }

                    # Remove Windows Copilot package
                    try {
                        Write-Host "`nRemove Copilot Package" -ForegroundColor Cyan
                        $Name = 'Copilot'
                        Get-AppxPackage "*$Name*" -AllUsers | Remove-AppxPackage -AllUsers -ErrorAction Continue
                        Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like "*$Name*" | Remove-AppxProvisionedPackage -Online -ErrorAction Continue
                    }
                    catch {
                        Write-Warning "Unable to Remove Copilot due to unhandled exception"
                        Write-Warning $PSItem.Exception.StackTrace
                    }
                }"</CommandLine>
            </SynchronousCommand>

            <!-- Unload DefaultUser Hive -->
            <SynchronousCommand wcm:action="add">
                <Order>3</Order>
                <CommandLine>reg.exe unload "HKU\DefaultUser"</CommandLine>
            </SynchronousCommand>
        </FirstLogonCommands>
    </component>
</settings>
</unattend>